[gd_scene load_steps=13 format=2]

[ext_resource path="res://images/particles/shards.png" type="Texture" id=1]
[ext_resource path="res://images/masks/radial.png" type="Texture" id=2]
[ext_resource path="res://sounds/30935__aust-paul__possiblelazer.wav" type="AudioStream" id=3]

[sub_resource type="CanvasItemMaterial" id=1]
particles_animation = true
particles_anim_h_frames = 4
particles_anim_v_frames = 2
particles_anim_loop = false

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0, 0.0814815, 0.607407, 1 )
colors = PoolColorArray( 0.501961, 0.878431, 1, 0, 0.501961, 0.878431, 1, 1, 0.376471, 0.627451, 0.878431, 1, 0.25098, 0.501961, 0.752941, 0 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="Curve" id=4]
min_value = 0.25
_data = [ Vector2( 0, 0.5 ), 0.0, 1.64099, 0, 0, Vector2( 1, 0.25 ), -1.53998, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=5]
curve = SubResource( 4 )

[sub_resource type="ParticlesMaterial" id=6]
flag_disable_z = true
spread = 180.0
gravity = Vector3( 0, 98, 0 )
initial_velocity = 128.0
initial_velocity_random = 0.5
angular_velocity = 180.0
angular_velocity_random = 0.5
orbit_velocity = 0.0
orbit_velocity_random = 0.0
damping = 8.0
angle = 360.0
angle_random = 1.0
scale = 0.75
scale_random = 0.5
scale_curve = SubResource( 5 )
color_ramp = SubResource( 3 )
hue_variation = 0.01
hue_variation_random = 1.0
anim_offset = 1.0
anim_offset_random = 1.0

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform int pixels = 8;

void fragment()
{
	float alpha = texture(TEXTURE,UV).g;
	vec2 uv = vec2(floor(SCREEN_UV.x*float(pixels)/SCREEN_PIXEL_SIZE.y)/float(pixels)*SCREEN_PIXEL_SIZE.y,floor(SCREEN_UV.y*float(pixels))/float(pixels));
	COLOR = (1.0-alpha)*texture(SCREEN_TEXTURE,SCREEN_UV)+alpha*texture(SCREEN_TEXTURE,uv);
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/pixels = 256

[sub_resource type="Animation" id=9]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("Pixelize:material:shader_param/pixels")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 0.5, 1 ),
"update": 0,
"values": [ 256, 8 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Pixelize:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.6, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 1.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Particles:emitting")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Pixelize:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0.1, 0.1 ), Vector2( 0.5, 0.5 ) ]
}

[node name="Impact" type="Node2D"]

[node name="Particles" type="Particles2D" parent="."]
material = SubResource( 1 )
position = Vector2( 0, -1 )
amount = 64
process_material = SubResource( 6 )
texture = ExtResource( 1 )

[node name="BackBufferCopy" type="BackBufferCopy" parent="."]
copy_mode = 2
rect = Rect2( -150, -150, 300, 300 )

[node name="Pixelize" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0 )
material = SubResource( 8 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 2 )

[node name="Sound" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 3 )
autoplay = true
bus = "Sound"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "animation"
anims/animation = SubResource( 9 )
